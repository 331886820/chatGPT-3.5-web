"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-client)/./app/constant.ts":
/*!*************************!*\
  !*** ./app/constant.ts ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"FETCH_COMMIT_URL\": function() { return /* binding */ FETCH_COMMIT_URL; },\n/* harmony export */   \"FETCH_TAG_URL\": function() { return /* binding */ FETCH_TAG_URL; },\n/* harmony export */   \"ISSUE_URL\": function() { return /* binding */ ISSUE_URL; },\n/* harmony export */   \"OWNER\": function() { return /* binding */ OWNER; },\n/* harmony export */   \"REPO\": function() { return /* binding */ REPO; },\n/* harmony export */   \"REPO_URL\": function() { return /* binding */ REPO_URL; },\n/* harmony export */   \"UPDATE_URL\": function() { return /* binding */ UPDATE_URL; }\n/* harmony export */ });\nconst OWNER = \"331886820\";\nconst REPO = \"ChatGPT-健康版\";\nconst REPO_URL = \"https://github.com/\".concat(OWNER, \"/\").concat(REPO);\nconst ISSUE_URL = \"https://github.com/\".concat(OWNER, \"/\").concat(REPO, \"/issues\");\nconst UPDATE_URL = \"\".concat(REPO_URL, \"#keep-updated\");\nconst FETCH_COMMIT_URL = \"https://api.github.com/repos/\".concat(OWNER, \"/\").concat(REPO, \"/commits?per_page=1\");\nconst FETCH_TAG_URL = \"https://api.github.com/repos/\".concat(OWNER, \"/\").concat(REPO, \"/tags?per_page=1\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1jbGllbnQpLy4vYXBwL2NvbnN0YW50LnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBTyxNQUFNQSxRQUFRLFlBQVk7QUFDMUIsTUFBTUMsT0FBTyxjQUFjO0FBQzNCLE1BQU1DLFdBQVcsc0JBQStCRCxPQUFURCxPQUFNLEtBQVEsT0FBTEMsTUFBTztBQUN2RCxNQUFNRSxZQUFZLHNCQUErQkYsT0FBVEQsT0FBTSxLQUFRLE9BQUxDLE1BQUssV0FBUztBQUMvRCxNQUFNRyxhQUFhLEdBQVksT0FBVEYsVUFBUyxpQkFBZTtBQUM5QyxNQUFNRyxtQkFBbUIsZ0NBQXlDSixPQUFURCxPQUFNLEtBQVEsT0FBTEMsTUFBSyx1QkFBcUI7QUFDNUYsTUFBTUssZ0JBQWdCLGdDQUF5Q0wsT0FBVEQsT0FBTSxLQUFRLE9BQUxDLE1BQUssb0JBQWtCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2FwcC9jb25zdGFudC50cz9hZjQ0Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBPV05FUiA9IFwiMzMxODg2ODIwXCI7XHJcbmV4cG9ydCBjb25zdCBSRVBPID0gXCJDaGF0R1BULeWBpeW6t+eJiFwiO1xyXG5leHBvcnQgY29uc3QgUkVQT19VUkwgPSBgaHR0cHM6Ly9naXRodWIuY29tLyR7T1dORVJ9LyR7UkVQT31gO1xyXG5leHBvcnQgY29uc3QgSVNTVUVfVVJMID0gYGh0dHBzOi8vZ2l0aHViLmNvbS8ke09XTkVSfS8ke1JFUE99L2lzc3Vlc2A7XHJcbmV4cG9ydCBjb25zdCBVUERBVEVfVVJMID0gYCR7UkVQT19VUkx9I2tlZXAtdXBkYXRlZGA7XHJcbmV4cG9ydCBjb25zdCBGRVRDSF9DT01NSVRfVVJMID0gYGh0dHBzOi8vYXBpLmdpdGh1Yi5jb20vcmVwb3MvJHtPV05FUn0vJHtSRVBPfS9jb21taXRzP3Blcl9wYWdlPTFgO1xyXG5leHBvcnQgY29uc3QgRkVUQ0hfVEFHX1VSTCA9IGBodHRwczovL2FwaS5naXRodWIuY29tL3JlcG9zLyR7T1dORVJ9LyR7UkVQT30vdGFncz9wZXJfcGFnZT0xYDtcclxuIl0sIm5hbWVzIjpbIk9XTkVSIiwiUkVQTyIsIlJFUE9fVVJMIiwiSVNTVUVfVVJMIiwiVVBEQVRFX1VSTCIsIkZFVENIX0NPTU1JVF9VUkwiLCJGRVRDSF9UQUdfVVJMIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-client)/./app/constant.ts\n"));

/***/ }),

/***/ "(app-client)/./app/requests.ts":
/*!*************************!*\
  !*** ./app/requests.ts ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ControllerPool\": function() { return /* binding */ ControllerPool; },\n/* harmony export */   \"requestChat\": function() { return /* binding */ requestChat; },\n/* harmony export */   \"requestChatStream\": function() { return /* binding */ requestChatStream; },\n/* harmony export */   \"requestOpenaiClient\": function() { return /* binding */ requestOpenaiClient; },\n/* harmony export */   \"requestUsage\": function() { return /* binding */ requestUsage; },\n/* harmony export */   \"requestWithPrompt\": function() { return /* binding */ requestWithPrompt; }\n/* harmony export */ });\n/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./store */ \"(app-client)/./app/store/index.ts\");\n/* harmony import */ var _components_ui_lib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/ui-lib */ \"(app-client)/./app/components/ui-lib.tsx\");\n\n\nconst TIME_OUT_MS = 30000;\nconst makeRequestParam = (messages, options)=>{\n    let sendMessages = messages.map((v)=>({\n            role: v.role,\n            content: v.content\n        }));\n    if (options === null || options === void 0 ? void 0 : options.filterBot) {\n        sendMessages = sendMessages.filter((m)=>m.role !== \"assistant\");\n    }\n    const modelConfig = {\n        ..._store__WEBPACK_IMPORTED_MODULE_0__.useChatStore.getState().config.modelConfig\n    };\n    // @331886820: wont send max_tokens, because it is nonsense for Muggles\n    // @ts-expect-error\n    delete modelConfig.max_tokens;\n    return {\n        messages: sendMessages,\n        stream: options === null || options === void 0 ? void 0 : options.stream,\n        ...modelConfig\n    };\n};\nfunction getHeaders() {\n    const accessStore = _store__WEBPACK_IMPORTED_MODULE_0__.useAccessStore.getState();\n    let headers = {};\n    if (accessStore.enabledAccessControl()) {\n        headers[\"access-code\"] = accessStore.accessCode;\n    }\n    if (accessStore.token && accessStore.token.length > 0) {\n        headers[\"token\"] = accessStore.token;\n    }\n    return headers;\n}\nfunction requestOpenaiClient(path) {\n    return function(body) {\n        let method = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"POST\";\n        return fetch(\"/api/openai?_vercel_no_cache=1\", {\n            method,\n            headers: {\n                \"Content-Type\": \"application/json\",\n                path,\n                ...getHeaders()\n            },\n            body: body && JSON.stringify(body)\n        });\n    };\n}\nasync function requestChat(messages) {\n    const req = makeRequestParam(messages, {\n        filterBot: true\n    });\n    const res = await requestOpenaiClient(\"v1/chat/completions\")(req);\n    try {\n        const response = await res.json();\n        return response;\n    } catch (error) {\n        console.error(\"[Request Chat] \", error, res.body);\n    }\n}\nasync function requestUsage() {\n    const formatDate = (d)=>\"\".concat(d.getFullYear(), \"-\").concat((d.getMonth() + 1).toString().padStart(2, \"0\"), \"-\").concat(d.getDate().toString().padStart(2, \"0\"));\n    const ONE_DAY = 2 * 24 * 60 * 60 * 1000;\n    const now = new Date(Date.now() + ONE_DAY);\n    const startOfMonth = new Date(now.getFullYear(), now.getMonth(), 1);\n    const startDate = formatDate(startOfMonth);\n    const endDate = formatDate(now);\n    const [used, subs] = await Promise.all([\n        requestOpenaiClient(\"dashboard/billing/usage?start_date=\".concat(startDate, \"&end_date=\").concat(endDate))(null, \"GET\"),\n        requestOpenaiClient(\"dashboard/billing/subscription\")(null, \"GET\")\n    ]);\n    const response = await used.json();\n    const total = await subs.json();\n    if (response.error && response.error.type) {\n        (0,_components_ui_lib__WEBPACK_IMPORTED_MODULE_1__.showToast)(response.error.message);\n        return;\n    }\n    if (response.total_usage) {\n        response.total_usage = Math.round(response.total_usage) / 100;\n    }\n    return {\n        used: response.total_usage,\n        subscription: total.hard_limit_usd\n    };\n}\nasync function requestChatStream(messages, options) {\n    const req = makeRequestParam(messages, {\n        stream: true,\n        filterBot: options === null || options === void 0 ? void 0 : options.filterBot\n    });\n    console.log(\"[Request] \", req);\n    const controller = new AbortController();\n    const reqTimeoutId = setTimeout(()=>controller.abort(), TIME_OUT_MS);\n    try {\n        const res = await fetch(\"/api/chat-stream\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                path: \"v1/chat/completions\",\n                ...getHeaders()\n            },\n            body: JSON.stringify(req),\n            signal: controller.signal\n        });\n        clearTimeout(reqTimeoutId);\n        let responseText = \"\";\n        const finish = ()=>{\n            options === null || options === void 0 ? void 0 : options.onMessage(responseText, true);\n            controller.abort();\n        };\n        if (res.ok) {\n            var _res_body, _options_onController;\n            const reader = (_res_body = res.body) === null || _res_body === void 0 ? void 0 : _res_body.getReader();\n            const decoder = new TextDecoder();\n            options === null || options === void 0 ? void 0 : (_options_onController = options.onController) === null || _options_onController === void 0 ? void 0 : _options_onController.call(options, controller);\n            while(true){\n                // handle time out, will stop if no response in 10 secs\n                const resTimeoutId = setTimeout(()=>finish(), TIME_OUT_MS);\n                const content = await (reader === null || reader === void 0 ? void 0 : reader.read());\n                clearTimeout(resTimeoutId);\n                const text = decoder.decode(content === null || content === void 0 ? void 0 : content.value);\n                responseText += text;\n                const done = !content || content.done;\n                options === null || options === void 0 ? void 0 : options.onMessage(responseText, false);\n                if (done) {\n                    break;\n                }\n            }\n            finish();\n        } else if (res.status === 401) {\n            console.error(\"Anauthorized\");\n            options === null || options === void 0 ? void 0 : options.onError(new Error(\"Anauthorized\"), res.status);\n        } else {\n            console.error(\"Stream Error\", res.body);\n            options === null || options === void 0 ? void 0 : options.onError(new Error(\"Stream Error\"), res.status);\n        }\n    } catch (err) {\n        console.error(\"NetWork Error\", err);\n        options === null || options === void 0 ? void 0 : options.onError(err);\n    }\n}\nasync function requestWithPrompt(messages, prompt) {\n    var _res_choices_at, _res_choices, _res_choices_at_message;\n    messages = messages.concat([\n        {\n            role: \"user\",\n            content: prompt,\n            date: new Date().toLocaleString()\n        }\n    ]);\n    const res = await requestChat(messages);\n    var _res_choices_at_message_content;\n    return (_res_choices_at_message_content = (_res_choices_at = res === null || res === void 0 ? void 0 : (_res_choices = res.choices) === null || _res_choices === void 0 ? void 0 : _res_choices.at(0)) === null || _res_choices_at === void 0 ? void 0 : (_res_choices_at_message = _res_choices_at.message) === null || _res_choices_at_message === void 0 ? void 0 : _res_choices_at_message.content) !== null && _res_choices_at_message_content !== void 0 ? _res_choices_at_message_content : \"\";\n}\n// To store message streaming controller\nconst ControllerPool = {\n    controllers: {},\n    addController (sessionIndex, messageId, controller) {\n        const key = this.key(sessionIndex, messageId);\n        this.controllers[key] = controller;\n        return key;\n    },\n    stop (sessionIndex, messageId) {\n        const key = this.key(sessionIndex, messageId);\n        const controller = this.controllers[key];\n        controller === null || controller === void 0 ? void 0 : controller.abort();\n    },\n    remove (sessionIndex, messageId) {\n        const key = this.key(sessionIndex, messageId);\n        delete this.controllers[key];\n    },\n    key (sessionIndex, messageIndex) {\n        return \"\".concat(sessionIndex, \",\").concat(messageIndex);\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-client)/./app/requests.ts\n"));

/***/ })

});